<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.yohannzhang.aigit</id>

    <name>AI Code Master</name>

    <vendor email="yohannzhang@qq.com">yohannzhang</vendor>
    <version>1.5.3</version>

    <description>
        <![CDATA[
        <h3>AI Code Master is an IntelliJ IDEA plugin powered by AI to help developers streamline their workflow with intelligent features:</h3>
        <ul>
            <li><strong>AI Commit Message Generation</strong>: Automatically generate concise and meaningful Git commit messages based on code changes.</li>
            <li><strong>Code Analysis & Comment Generation</strong>: Analyze selected code and generate accurate comments in English or Chinese.</li>
            <li><strong>Text-to-Code Generation</strong>: Write complete code snippets from natural language descriptions.</li>
            <li><strong>Code Optimization Suggestions</strong>: Get smart suggestions for improving code performance, readability, and best practices.</li>
            <li><strong>Smart Q&A Assistant</strong>: Ask coding-related questions and receive intelligent, context-aware answers.</li>
        </ul>

        <h3>Supported AI Models:</h3>
        <ul>
            <li>OpenAI API (GPT-4, GPT-3.5)</li>
            <li>Google Gemini</li>
            <li>DeepSeek</li>
            <li>Ollama (Local LLMs)</li>
            <li>Cloudflare Workers AI</li>
            <li>Alibaba Cloud Model Hub</li>
            <li>SiliconFlow Model Hub</li>
        </ul>

        <h3>Usage:</h3>
        <ul>
            <li>Select code and use the right-click menu or keyboard shortcuts (Alt + U / Alt + G / Alt + O / Alt + A) to trigger AI actions.</li>
            <li>Configure your API keys and model settings under Settings > Tools > AI Code Master.</li>
        </ul>

        <hr/>

        <h3>AI Code Master 是一款基于 AI 的 IntelliJ IDEA 插件，旨在通过智能功能帮助开发者优化开发流程：</h3>
        <ul>
            <li><strong>AI 生成提交信息</strong>: 根据代码变更自动产生简洁且有意义的 Git 提交信息。</li>
            <li><strong>代码分析与注释生成</strong>: 分析选中的代码并生成准确的中英文注释。</li>
            <li><strong>文本生成代码</strong>: 根据自然语言描述生成完整的代码片段。</li>
            <li><strong>代码优化建议</strong>: 获取改进代码性能、可读性和最佳实践的智能建议。</li>
            <li><strong>智能问答助手</strong>: 提出编码相关问题，并获得智能、上下文相关的答案。</li>
        </ul>

        <h3>支持的 AI 模型：</h3>
        <ul>
            <li>OpenAI API (GPT-4, GPT-3.5)</li>
            <li>Google Gemini</li>
            <li>DeepSeek</li>
            <li>Ollama (本地大模型)</li>
            <li>Cloudflare Workers AI</li>
            <li>阿里云模型库</li>
            <li>SiliconFlow 模型库</li>
        </ul>

        <h3>使用方式：</h3>
        <ul>
            <li>选中代码后通过右键菜单或快捷键（Alt + U / Alt + G / Alt + O / Alt + A）触发 AI 功能。</li>
            <li>在设置(Settings) > Tools > AI Code Master 中配置 API 密钥及模型参数。</li>
        </ul>
    ]]>
    </description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends optional="true" config-file="lang.xml">com.intellij.modules.lang</depends>
    <depends optional="true" config-file="vcs.xml">com.intellij.modules.vcs</depends>
    <depends optional="true" config-file="git4idea.xml">Git4Idea</depends>
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.lang</depends>



    <extensions defaultExtensionNs="com.intellij">
        <!--        <projectService serviceImplementation="com.yohannzhang.aigit.ui.AIGuiComponent"/>-->
        <!-- 注册欢迎通知活动 -->
        <postStartupActivity implementation="com.yohannzhang.aigit.action.WelcomeNotification"/>
        <!-- 注册行标记提供者 -->
        <!-- <lineMarkerProvider implementation="com.yohannzhang.aigit.gutter.CodeActionGutterIconProvider"/> -->
        <postStartupActivity implementation="com.yohannzhang.aigit.ui.editor.CodeActionEditorListener"/>
        <!-- 声明通知组 -->
        <notificationGroup id="AI Code Master Notifications" displayType="BALLOON"/>
        <!--        <applicationConfigurable instance="config.com.yohannzhang.aigit.ApiKeyConfigurable"-->
        <!--            displayName="AI Git Commit"/>-->
        <applicationConfigurable instance="com.yohannzhang.aigit.config.ApiKeyConfigurable"
                                 id="aigit.settings"
                                 displayName="AI Code Master"
                                 groupId="Tools"/>
        <applicationService serviceImplementation="com.yohannzhang.aigit.config.ApiKeySettings"/>

        <applicationService serviceImplementation="com.yohannzhang.aigit.config.ChatHistoryService"/>

        <!-- 注册工具窗口 -->
        <toolWindow id="AICodeMaster" icon="/icons/git-commit-logo.svg"
                    anchor="right"
                    factoryClass="com.yohannzhang.aigit.ui.CombinedWindowFactory"/>
    </extensions>

    <actions>


        <!-- Declare the action for manual commit message generation -->
        <group id="MyCustomCommitActionGroup" text="Custom Commit Actions" popup="true"/>

        <action id="AICommitMessage.Generate"
                class="com.yohannzhang.aigit.action.GenerateCommitMessageAction"
                text="Generate AI Commit Message"
                icon="/icons/git-commit-logo.svg"
                description="Generate a commit message using AI">
            <add-to-group group-id="Vcs.MessageActionGroup" anchor="first"/>
        </action>

        <action id="com.yohannzhang.aigit.action.GenJUintTestAction" class="com.yohannzhang.aigit.action.GenJUintTestAction"
                text="生成单元测试" description="生成单元测试代码">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="alt U"/>
        </action>

        <action id="com.yohannzhang.aigit.action.DiffCodeReviewAction"
                class="com.yohannzhang.aigit.action.DiffCodeReviewAction"
                text="AI Code Review"
                icon="/icons/git-commit-logo.svg"
                description="Perform AI code review on diff">
            <add-to-group group-id="Diff.EditorPopupMenu" anchor="first"/>
        </action>

        <group id="com.yohannzhang.aigit.action.EnhancedDocGenerationAction"
                class="com.yohannzhang.aigit.action.EnhancedDocGenerationAction"
                text="生成文档"
                description="生成项目文档、API文档、UML图表、依赖关系图和中英双语文档"
                popup="true"
                icon="/icons/git-commit-logo.svg">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>
        </group>

        <action id="com.yohannzhang.aigit.action.GenerateProjectDocAction"
                class="com.yohannzhang.aigit.action.GenerateProjectDocAction"
                text="项目文档"
                description="生成项目的详细文档"/>

        <action id="com.yohannzhang.aigit.action.GenerateApiDocAction"
                class="com.yohannzhang.aigit.action.GenerateApiDocAction"
                text="API 文档"
                description="生成 API 接口文档"/>

<!--        <action id="com.yohannzhang.aigit.action.GenerateUmlDiagramAction"-->
<!--                class="com.yohannzhang.aigit.action.GenerateUmlDiagramAction"-->
<!--                text="UML 图表"-->
<!--                description="生成 UML 类图"/>-->

        <action id="com.yohannzhang.aigit.action.GenerateDependencyGraphAction"
                class="com.yohannzhang.aigit.action.GenerateDependencyGraphAction"
                text="依赖关系图"
                description="生成项目依赖关系图"/>

        <action id="com.yohannzhang.aigit.action.GenerateBilingualDocAction"
                class="com.yohannzhang.aigit.action.GenerateBilingualDocAction"
                text="中英双语文档"
                description="生成中英双语项目文档"/>

<!--        <action id="com.yohannzhang.aigit.action.GenerateClassDependencyFlowAction"-->
<!--                class="com.yohannzhang.aigit.action.GenerateClassDependencyFlowAction"-->
<!--                text="生成类依赖关系图"-->
<!--                description="分析类的上下游依赖关系并生成流程图">-->
<!--            <add-to-group group-id="EditorPopupMenu" anchor="first"/>-->
<!--            <keyboard-shortcut keymap="$default" first-keystroke="alt D"/>-->
<!--        </action>-->

<!--        <action id="com.yohannzhang.aigit.action.GenerateProjectAnalysisAction"-->
<!--                class="com.yohannzhang.aigit.action.GenerateProjectAnalysisAction"-->
<!--                text="项目分析报告"-->
<!--                description="生成详细的项目分析报告，包括代码质量、复杂度、重复代码和依赖关系分析">-->
<!--            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
<!--            <keyboard-shortcut keymap="$default" first-keystroke="alt P"/>-->
<!--        </action>-->

        <action id="AIGit.CodeRAG" 
                class="com.yohannzhang.aigit.core.actions.CodeRAGAction"
                text="Code RAG Search"
                description="Search code using RAG technology"
                icon="AllIcons.Actions.Search">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift R"/>
        </action>

    </actions>


    <change-notes>
        <![CDATA[
        <ul>
            <li>新增代码高亮功能，提升代码阅读体验。</li>
            <li>增加复制按钮，方便快速复制生成的代码或文本内容。</li>
            <li>全面实现双语支持，界面和提示信息同时显示中英文。</li>
        </ul>

        <h3>Changelog</h3>
        <ul>
            <li>Added code highlighting to enhance code reading experience.</li>
            <li>Added copy button for quick copying of generated code or text content.</li>
            <li>Implemented full bilingual support; interface and prompt messages display both Chinese and English.</li>
        </ul>
    ]]>
    </change-notes>


</idea-plugin>